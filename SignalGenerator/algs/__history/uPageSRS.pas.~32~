unit uPageSRS;

interface
uses
  uSignal, uBaseObj, uBaseObjStr, uCommonTypes, math, classes, uSrs;
type

  cDiscreetSRSAlg = class(cSRSAlg)
  public
    function Eval(signal:csignal; shockindex:integer):csignal;override;
    function EvalTimeRealisation(signal:csignal; shockindex:integer;
                                     f:single; var maxV:single):csignal;override;
  end;

implementation
uses
  uSRSForm;

function cDiscreetSRSAlg.EvalTimeRealisation(signal:csignal; shockindex:integer;
                                     f:single; var maxV:single):csignal;
var
  shock:cShock;
  i, j, i1,i2:integer;
  x:array of single;
  dt, dt2, wn, wn2, N:single;
begin
  Shock:=GetShock(ShockIndex);
  i1:=Shock.i1;
  i2:=Shock.i2;
  dt:=signal.dx;

  result:=csignal.create;
  result.SignalLength:=i2-i1-1;
  result.dx:=dt;
  result.x0:=0;

  wn:=f*2*pi;
  wn2:=wn*wn;
  result.points[0]:=0;
  dt2:=dt*dt;

  setlength(x,result.SignalLength+1);
  x[0]:=0;
  x[1]:=dt2*signal.points[i1+1]/2;
  N:=wn*e*dt;
  // расчет временной реализации перемещения
  for i:= i1+2 to i2 - 1 do
  begin
    j:=i-i1;
    x[j]:=(dt2*signal.points[i]-x[j-1]*(wn2*dt2-2)-
                         x[j-2]*(1-N))/(1+N);
  end;
  result.points[0]:=0;
  maxV:=0;
  // Расчет Ускорений
  for i:= 1 to result.SignalLength-2 do
  begin
    result.points[i]:=(x[i+1]-2*x[i]+x[i-1])/dt2;
    if abs(result.points[i])>abs(maxV) then
    //if result.points[i]>maxV then
      maxV:=result.points[i];
  end;
end;

// signal - исходныйе данные для расчета спектра удара. то что было замерено датчиком
function cDiscreetSRSAlg.Eval(signal:csignal; shockindex:integer):csignal;
var
  i, SpectrumLength:integer;
  f, maxV:single;
  s:csignal;
begin
  SpectrumLength:=trunc((f2-f1)/df);
  result:=csignal.create;
  result.SignalLength:=SpectrumLength;
  result.dx:=trunc(df);
  result.x0:=f1;

  f:=f1;
  // проход по собственным частотам
  for i := 0 to SpectrumLength - 1 do
  begin
    s:=EvalTimeRealisation(signal,ShockIndex,f,maxV);
    s.destroy;
    result.points[i]:=maxV;
    f:=f+df;
  end;
end;

end.
