library SubdivFilePlg;

uses
  ComServ,
  SysUtils,
  Classes,
  dialogs,
  consts,
  windows,
  registry,
  SubdivFilePlg_TLB in 'SubdivFilePlg_TLB.pas',
  uSubdivePlg in 'uSubdivePlg.pas' {SubdivePlgClass: CoClass},
  POSBase in '..\SharedWP\POSBase.pas',
  Winpos_ole_TLB in '..\SharedWP\Winpos_ole_TLB.pas';

exports
  DllGetClassObject,
  DllCanUnloadNow,
  DllRegisterServer,
  DllUnregisterServer;

{$R *.TLB}
{$R *.RES}
{$SubdivFilePlg *.RES}


// порядок создания оператор
// 1) Открыть файл .ridl в IDE. В дереве объектов добавить CoClass
// 2) На вкладке implements вставить интерфейс IWPExtOper
// 3) создать вручную юнит с исходником плагина и скопировать туда набор методов из примера (методы помеченные как safecall)
// 4) Добавить секцию initialization как в этом файле
// 5) прописать в DllRegisterServer reg.writestring(string(buffer), 'SubdivFilePlg.SubdivePlgClass');
// где SubdivFilePlg - библиотека типов (файл ridll)  IEMeraPlg - имя CoClass из библиотеки

function  DllRegisterServer: hresult; stdcall;
var
  reg:tregistry;
var
  buffer:array[0..255] of char;
begin
  reg :=tregistry.Create;
  try
    reg.rootkey := hkey_local_machine;
    getmodulefilename(hinstance, buffer, 255);
    reg.openkey('\Software\MERA\Winpos\COMPlugins', True);
    reg.writestring(string(buffer),'SubdivFilePlg.SubdivePlgClass');
    // showmessage(string(buffer));
    // делаем не через кокласс а через connect главного класса .Connect(
    // reg.writestring(string(buffer),'WPExtPack.IEMeraPlg');
    // showmessage(string(buffer));
  finally
    reg.Free;
  end;
  Result := comserv.dllregisterserver;
end;


function dllunregisterserver: hresult; stdcall;
var
  reg: tregistry;
var
  buffer: array[0..255] of char;
begin
  reg := tregistry.Create;
  try
    reg.rootkey := hkey_local_machine;
    getmodulefilename(hinstance, buffer, 255);
    if (reg.openkey('\Software\MERA\Winpos\COMPlugins', False)) then
    begin
      //showmessage('unreg: '+string(buffer));
      reg.DeleteValue(string(buffer));
    end;
  finally
    reg.Free;
   end;
  Result := comserv.dllunregisterserver;
end;


exports dllgetclassobject Name 'DllGetClassObject',
  dllcanunloadnow Name 'DllCanUnloadNow',
  dllregisterserver name 'DllRegisterServer',
  dllunregisterserver Name 'DllUnregisterServer';

begin
end.
