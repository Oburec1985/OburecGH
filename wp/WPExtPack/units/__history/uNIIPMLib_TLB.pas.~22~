unit uNIIPMlib_TLB;

// ************************************************************************ //
// WARNING
// -------
// The types declared in this file were generated from data read from a
// Type Library. If this type library is explicitly or indirectly (via
// another type library referring to this type library) re-imported, or the
// 'Refresh' command of the Type Library Editor activated while editing the
// Type Library, the contents of this file will be regenerated and all
// manual modifications will be lost.
// ************************************************************************ //

// $Rev: 17244 $
// File generated on 07.07.2012 13:23:07 from Type Library described below.

// ************************************************************************  //
// Type Lib: D:\oburec\project2010\wp\Generator\uNIIPMlib (1)
// LIBID: {7F30E7E6-DAF8-459C-8FE9-A8142CCF6D97}
// LCID: 0
// Helpfile:
// HelpString: SignalGenerator Library
// DepndLst:
//   (1) v2.0 stdole, (C:\WINDOWS.0\system32\stdole2.tlb)
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers.
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
{$ALIGN 4}
interface

uses Windows, ActiveX, Classes, Graphics, OleServer, StdVCL, Variants;


// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:
//   Type Libraries     : LIBID_xxxx
//   CoClasses          : CLASS_xxxx
//   DISPInterfaces     : DIID_xxxx
//   Non-DISP interfaces: IID_xxxx
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  uNIIPMlibMajorVersion = 1;
  uNIIPMlibMinorVersion = 0;

  LIBID_uNIIPMlib: TGUID = '{7F30E7E6-DAF8-459C-8FE9-A8142CCF6D97}';
  IID_INIIPM: TGUID = '{ADED7AEC-2818-4988-B3FF-788DBF76F723}';

type

  INIIPM = interface;
  INIIPMDisp = dispinterface;

  INIIPM = interface(IDispatch)
    ['{ADED7AEC-2818-4988-B3FF-788DBF76F723}']
    function Connect(const app: IDispatch): Integer; safecall;
    function Disconnect: Integer; safecall;
    function NotifyPlugin(what: Integer; var param: OleVariant): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IGeneratorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ADED7AEC-2818-4988-B3FF-788DBF76F723}
// *********************************************************************//
  INIIPMDisp = dispinterface
    ['{ADED7AEC-2818-4988-B3FF-788DBF76F723}']
    function Connect(const app: IDispatch): Integer; dispid 1;
    function Disconnect: Integer; dispid 2;
    function NotifyPlugin(what: Integer; var param: OleVariant): Integer; dispid 3;
  end;

// *********************************************************************//
// The Class CoGenerator provides a Create and CreateRemote method to
// create instances of the default interface IGenerator exposed by
// the CoClass Generator. The functions are intended to be used by
// clients wishing to automate the CoClass objects exposed by the
// server of this typelibrary.
// *********************************************************************//
  CoGenerator = class
    class function Create: INIIPM;
    class function CreateRemote(const MachineName: string): INIIPM;
  end;

implementation

uses ComObj;

class function CoGenerator.Create: INIIPM;
begin
  Result := CreateComObject(CLASS_Generator) as INIIPM;
end;

class function CoGenerator.CreateRemote(const MachineName: string): INIIPM;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Generator) as INIIPM;
end;

end.

