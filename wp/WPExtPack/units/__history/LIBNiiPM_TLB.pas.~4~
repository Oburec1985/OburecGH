unit LIBNiiPM_TLB;

// ************************************************************************ //
// WARNING
// -------
// The types declared in this file were generated from data read from a
// Type Library. If this type library is explicitly or indirectly (via
// another type library referring to this type library) re-imported, or the
// 'Refresh' command of the Type Library Editor activated while editing the
// Type Library, the contents of this file will be regenerated and all
// manual modifications will be lost.
// ************************************************************************ //

// $Rev: 17244 $
// File generated on 27.12.2012 18:15:39 from Type Library described below.

// ************************************************************************  //
// Type Lib: E:\Oburec\delphi\wp\Õ»»œÃ\units\uNIIPMlib (1)
// LIBID: {7F30E7E6-DAF8-459C-8FE9-A8142CCF6D97}
// LCID: 0
// Helpfile:
// HelpString: NIIPMtenzoplugin Library
// DepndLst:
//   (1) v2.0 stdole, (D:\WINDOWS\system32\stdole2.tlb)
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers.
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
{$ALIGN 4}
interface

uses Windows, ActiveX, Classes, Graphics, OleServer, StdVCL, Variants;


// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:
//   Type Libraries     : LIBID_xxxx
//   CoClasses          : CLASS_xxxx
//   DISPInterfaces     : DIID_xxxx
//   Non-DISP interfaces: IID_xxxx
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  LIBNiiPMMajorVersion = 1;
  LIBNiiPMMinorVersion = 0;

  LIBID_LIBNiiPM: TGUID = '{7F30E7E6-DAF8-459C-8FE9-A8142CCF6D97}';

  IID_INiiPM: TGUID = '{ADED7AEC-2818-4988-B3FF-788DBF76F723}';
  CLASS_NiiPm: TGUID = '{7CD5B8BD-4CD7-4350-813B-0896D3610CC7}';
type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary
// *********************************************************************//
  INiiPM = interface;
  INiiPMDisp = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library
// (NOTE: Here we map each CoClass to its Default Interface)
// *********************************************************************//
  NiiPm = INiiPM;




implementation

uses ComObj;

class function CoNiiPm.Create: INiiPM;
begin
  Result := CreateComObject(CLASS_NiiPm) as INiiPM;
end;

class function CoNiiPm.CreateRemote(const MachineName: string): INiiPM;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_NiiPm) as INiiPM;
end;

end.

