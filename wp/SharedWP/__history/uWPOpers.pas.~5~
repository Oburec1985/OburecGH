unit uWPOpers;

interface
uses
  Windows, sysutils, ActiveX, Classes, ComObj, StdVcl,
  uBaseObjService, variants,
  Winpos_ole_TLB, POSBase, graphics, Forms, uBaseObj, uBaseObjMng, NativeXML,
  uEventList, dialogs, uCommonMath,
  uCommonTypes, uLogFile, uSetList, inifiles, mathfunction,
  uWPEvents, Messages,
  math;

type
  TUnits = (u_Abs, u_percent, u_10Lg, u_20Lg);

  tgraphstruct = record
    hpage, hgraph, haxis, hline: integer;
  end;


function getSignalViewRangeY(s:iwpsignal):point2d;
function GetGraphStructByHLine(hline:integer):tgraphstruct;
function createline(Signal: iwpsignal): tgraphstruct; overload;
// g,a - график и ось
function createline(Signal: iwpsignal; g, a: integer): tgraphstruct; overload;
// в новый график на той же странице
function createline(Signal: iwpsignal; p: integer): tgraphstruct; overload;
// закидывает на выбраный график сигнал в новую ось и нормирует ее. при необходимости нормируется x графика
function createlineNewAx(Signal: iwpsignal; g: integer): tgraphstruct; overload;
procedure normaliseGraph(g: integer);
// Найти страницу по графику. Возвращает hpage
function FindPageByGraph(graph: integer): integer;
// мин макс по оси X для графика
function Getgraphminmax(g: integer): point2d;
function activeGraph:tgraphstruct;
// получить диапазон выбранного графика
function GetActiveGraphX: point2d;
function GetActiveCursorX: point2d;
function GetGraphX(g: integer): point2d;
function GetGraphCursorX(p,g: integer): point2d;
function findNode(inst:integer):iwpnode;overload;
function findNode(node:iwpnode;inst:integer):iwpnode;overload;
function findSignal(path:string):iwpsignal;
function isHelpChannel(s:string):boolean;overload;
function isHelpChannel(s:iwpsignal):boolean;overload;

implementation

function getSignalViewRangeY(s:iwpsignal):point2d;
var
  range:double;
begin
  result.x:=s.MinY;
  result.y:=s.MaxY;
  range:=result.y-result.x;
  result.x := result.x - range*0.05;
  result.y := result.y + range*0.05;
end;


end.
